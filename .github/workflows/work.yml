name: .NET Core CI/CD

on:
  push:
    branches:
      - master
    paths:
      - "**"
      - "!**.md"
  pull_request:
    paths:
      - "**"
      - "!**.md"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.6.0
        with:
          dotnet-version: 3.1
      - name: Restore Tool
        run: dotnet tool restore
      - name: Add Problem Matcher for dotnet-format
        uses: xt0rted/dotnet-format-problem-matcher@v1
      - name: Lint
        run: dotnet format --check --dry-run

  test:
    name: Debug Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        # see also https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json
        dotnet: ["3.1"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.1
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup .NET Core ${{ matrix.dotnet }} SDK
        uses: actions/setup-dotnet@v1.6.0
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --settings coverlet.runsettings

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: "!**/.nuget/packages/**/*.*"
          flags: ${{ runner.os }},netcore${{ matrix.dotnet }}